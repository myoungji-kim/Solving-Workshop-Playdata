show user;

-- 16
SELECT STUDENT_NAME 동명이인, COUNT(*) "동명인 수" 
FROM TB_STUDENT
GROUP BY STUDENT_NAME
HAVING COUNT(*) > 1
ORDER BY 동명이인;

-- 17 (10)
SELECT STUDENT_NAME "학생이름", STUDENT_NO "학번", STUDENT_ADDRESS "거주지 주소"
FROM TB_STUDENT
WHERE (STUDENT_ADDRESS LIKE '강원%' OR STUDENT_ADDRESS LIKE '경기도%')
            AND SUBSTR(STUDENT_NO, 1, 1) != 'A'
ORDER BY STUDENT_NAME;

-- 18 (17)
SELECT p.PROFESSOR_NAME, p.PROFESSOR_SSN
FROM TB_DEPARTMENT d INNER JOIN TB_PROFESSOR p
USING (DEPARTMENT_NO)
WHERE DEPARTMENT_NO = '005'
ORDER BY p.PROFESSOR_SSN;

-- 19
SELECT *
FROM TB_CLASS;

SELECT tc.CLASS_NAME, td.DEPARTMENT_NAME
FROM TB_CLASS tc INNER JOIN TB_DEPARTMENT td
USING (DEPARTMENT_NO);

-- 20
SELECT tc.CLASS_NAME, tc.PROFESSOR_NAME
FROM TB_CLASS tc INNER JOIN TB_PROFESSOR tc USING (DEPARTMENT_NO)
INNER JOIN TB_CLASS_PROFESSOR tcp USING (CLASS_NO);

SELECT tc.CLASS_NAME, tp.PROFESSOR_NAME
FROM TB_CLASS tc INNER JOIN TB_CLASS_PROFESSOR tcp USING (CLASS_NO)
INNER JOIN TB_PROFESSOR tp USING (PROFESSOR_NO); 
-- (40)
-- 21
SELECT tc.CLASS_NAME, tp.PROFESSOR_NAME
FROM TB_CLASS tc 
INNER JOIN TB_DEPARTMENT td ON tc.DEPARTMENT_NO = td.DEPARTMENT_NO
INNER JOIN TB_CLASS_PROFESSOR tcp ON tc.CLASS_NO =  tcp.CLASS_NO
INNER JOIN TB_PROFESSOR tp ON tcp.PROFESSOR_NO = tp.PROFESSOR_NO
WHERE td.CATEGORY = '인문사회';

-- 22
SELECT STUDENT_NO, STUDENT_NAME
FROM TB_STUDENT;

-- 이름만 출력하려고 하면 에러남
SELECT ts.STUDENT_NO "학번", ts.STUDENT_NAME "학생 이름", ROUND(AVG(tg.POINT), 1) "평점"
FROM TB_STUDENT ts 
INNER JOIN TB_GRADE tg ON ts.STUDENT_NO = tg.STUDENT_NO
INNER JOIN TB_DEPARTMENT td ON ts.DEPARTMENT_NO = td.DEPARTMENT_NO
WHERE td.DEPARTMENT_NAME = '음악학과'
GROUP BY ts.STUDENT_NO, ts.STUDENT_NAME
ORDER BY "평점" DESC;

-- 23
SELECT td.DEPARTMENT_NAME, ts.STUDENT_NAME, tp.PROFESSOR_NAME 
FROM TB_DEPARTMENT td
INNER JOIN TB_STUDENT ts ON td.DEPARTMENT_NO = ts.DEPARTMENT_NO
INNER JOIN TB_PROFESSOR tp ON ts.COACH_PROFESSOR_NO = tp.PROFESSOR_NO
WHERE ts.STUDENT_NO = 'A313047';

-- 24 
SELECT ts.STUDENT_NAME, tg.TERM_NO
FROM TB_CLASS tc
INNER JOIN TB_GRADE tg ON tc.CLASS_NO = tg.CLASS_NO
INNER JOIN TB_STUDENT ts ON tg.STUDENT_NO = ts.STUDENT_NO
WHERE tc.CLASS_NAME = '인간관계론' AND SUBSTR(tg.TERM_NO, 1, 4) = '2007'
ORDER BY ts.STUDENT_NAME;

-- 25
-- TB_DEPARTMENT , TB_CLASS, TB_CLASS_PROFESSOR
SELECT tc.CLASS_NAME, td.DEPARTMENT_NAME
FROM TB_DEPARTMENT td
INNER JOIN TB_CLASS tc ON td.DEPARTMENT_NO = tc.DEPARTMENT_NO
FULL JOIN TB_CLASS_PROFESSOR tcp ON tc.CLASS_NO = tcp.CLASS_NO
WHERE CATEGORY = '예체능' AND tcp.PROFESSOR_NO IS NULL;

-- 26
-- TB_STUDENT, TB_PROFESSOR, TB_DEPARTMENT
SELECT ts.STUDENT_NAME 학생이름, DECODE(tp.PROFESSOR_NAME, NULL, '지도교수 미지정', tp.PROFESSOR_NAME) 지도교수
FROM TB_STUDENT ts
INNER JOIN TB_DEPARTMENT td ON td.DEPARTMENT_NO = ts.DEPARTMENT_NO
FULL JOIN TB_PROFESSOR tp ON tp.PROFESSOR_NO = ts.COACH_PROFESSOR_NO
WHERE td.DEPARTMENT_NAME = '서반아어학과';

-- 27
-- TB_DEPARTMENT, TB_CLASS, TB_TB_GRADE
SELECT tc.CLASS_NO, tc.CLASS_NAME, ROUND(AVG(tg.POINT), 7), td.DEPARTMENT_NAME
FROM TB_DEPARTMENT td 
INNER JOIN TB_CLASS tc ON td.DEPARTMENT_NO = tc.DEPARTMENT_NO
INNER JOIN TB_GRADE tg ON tc.CLASS_NO = tg.CLASS_NO
WHERE td.DEPARTMENT_NAME = '환경조경학과' AND tc.CLASS_TYPE = '전공선택'
GROUP BY tg.CLASS_NO, tc.CLASS_NO, tc.CLASS_NAME, td.DEPARTMENT_NAME;


-- SELECT e.department_id, 총합, 평균, 인원수
--FROM (SELECT department_id, SUM(salary) 합계, AVG(salary) 평균, COUNT(*) 인원수 FROM employees GROUP BY department_id) e, departments d
--WHERE e.department_id = d.department_id
--ORDER BY 1;

-- 28
-- 서브쿼리 관련 문제
SELECT *
FROM TB_DEPARTMENT
WHERE CATEGORY = (SELECT CATEGORY  FROM TB_DEPARTMENT WHERE DEPARTMENT_NAME = '환경조경학과');

